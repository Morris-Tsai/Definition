p300
抽象(abstract)函數:代表類別中的函式只宣告但不定義內容(又稱為簽名signature)
抽象類別:擁有抽象函數的類別稱之
抽象類別因為有函數未定義內容，所以無法產生物件
抽象函數必須是抽象類別

非abstract函式的特徵
1.函式沒有標示為abstract
2.函式宣告包含大括弧，也就是有定義函式內容
3.這函式提供了用來實作的程式碼
第一個抽象類別的具體子類別(concrete subclass)必須實作所有父類別的抽象函數


介面(Interface)
介面:是一個只宣告不定義函式類容的類別
放在介面裡的函數一定是抽象函數
例如:
interface Animal{
  int name;
  void eat();
}  
  
宣告介面
建立介面如同訂定契約一樣，只須說明如何做的綱要，也就是完全的抽象類別(全部的函式只有簽名signature)
1.執行細節則由繼承後的子類別定義
2.介面可以在任何繼承樹(Inheritance tree)中，也可以被任何類別實作
3.介面是一個百分之百的抽象型類別

介面的特徵
1.所有介面函式都是public、abstract
2.所有介面內的變數都是public、static、final
3.介面函式不可以是static也不可以是final
4.一個介面可以擴充一個或多個介面，但不可實作(implements)其他介面或類別
5.使用關鍵字interface宣告
6.介面的名稱一般使用形容詞命名。例如:Runnable or Serializable

非抽象式類別必須實做下列幾點
1.對所實作的介面內所有的函式提供具體的函式實作
2.遵守所有的覆寫規則
3.除了介面函式所宣告的異常外，不能宣告範圍更廣或其他新的可控式異常
4.維持和介面函式一樣的標記式和回傳型別(或子類別)

兩個重要的規則
1.一個類別可實做一個或多個介面
2.一個介面可以擴充其他介面，但不能實做其他介面




